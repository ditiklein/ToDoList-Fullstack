{"ast":null,"code":"import axios from'axios';axios.defaults.baseURL=\"http://localhost:5080\";axios.interceptors.response.use(response=>response,error=>{if(process.env.NODE_ENV===\"development\"){console.error(\"Axios Response Error:\",error.response?error.response.data:error.message);}return Promise.reject(error);});export default{getTasks:async()=>{try{const result=await axios.get('/tasks');return Array.isArray(result.data)?result.data:[];}catch(error){return[];}},addTask:async name=>{try{const newTask={name,isComplete:false};const result=await axios.post('/tasks',newTask);return result.data;}catch(error){return null;}},setCompleted:async(id,isComplete)=>{try{const result=await axios.put(\"/tasks/\".concat(id),{id,isComplete});return result.data;}catch(error){return null;}},deleteTask:async id=>{try{await axios.delete(\"/tasks/\".concat(id));return true;}catch(error){return false;}}};","map":{"version":3,"names":["axios","defaults","baseURL","interceptors","response","use","error","process","env","NODE_ENV","console","data","message","Promise","reject","getTasks","result","get","Array","isArray","addTask","name","newTask","isComplete","post","setCompleted","id","put","concat","deleteTask","delete"],"sources":["D:/Users/User/Desktop/שעורי בית/שנה ב/פרקטיקוד/ToDoLis-FullStack/Todo-Client/src/service.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = \"http://localhost:5080\";\naxios.interceptors.response.use(\n  response => response,\n  error => {\n    if (process.env.NODE_ENV === \"development\") {\n      console.error(\"Axios Response Error:\", error.response ? error.response.data : error.message);\n    }\n    return Promise.reject(error);\n  }\n);\n\n\nexport default {\n  getTasks: async () => {\n    try {\n      const result = await axios.get('/tasks');\n      return Array.isArray(result.data) ? result.data : [];  \n    } catch (error) {\n      return [];\n    }\n  },\n  addTask: async (name) => {\n    try {\n      const newTask = { name, isComplete: false };\n      const result = await axios.post('/tasks', newTask, \n      );\n      return result.data;\n    } catch (error) {\n      return null;\n    }\n  },\n\n  setCompleted: async (id, isComplete) => {\n    try {\n      const result = await axios.put(`/tasks/${id}`, { id, isComplete }\n      );\n      return result.data;\n    } catch (error) {\n      return null;\n    }\n  },\n\n  deleteTask: async (id) => {\n    try {\n      await axios.delete(`/tasks/${id}`);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,CAAG,uBAAuB,CAChDF,KAAK,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC7BD,QAAQ,EAAIA,QAAQ,CACpBE,KAAK,EAAI,CACP,GAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,CAAE,CAC1CC,OAAO,CAACJ,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAACF,QAAQ,CAAGE,KAAK,CAACF,QAAQ,CAACO,IAAI,CAAGL,KAAK,CAACM,OAAO,CAAC,CAC9F,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC,CAC9B,CACF,CAAC,CAGD,cAAe,CACbS,QAAQ,CAAE,KAAAA,CAAA,GAAY,CACpB,GAAI,CACF,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAhB,KAAK,CAACiB,GAAG,CAAC,QAAQ,CAAC,CACxC,MAAO,CAAAC,KAAK,CAACC,OAAO,CAACH,MAAM,CAACL,IAAI,CAAC,CAAGK,MAAM,CAACL,IAAI,CAAG,EAAE,CACtD,CAAE,MAAOL,KAAK,CAAE,CACd,MAAO,EAAE,CACX,CACF,CAAC,CACDc,OAAO,CAAE,KAAO,CAAAC,IAAI,EAAK,CACvB,GAAI,CACF,KAAM,CAAAC,OAAO,CAAG,CAAED,IAAI,CAAEE,UAAU,CAAE,KAAM,CAAC,CAC3C,KAAM,CAAAP,MAAM,CAAG,KAAM,CAAAhB,KAAK,CAACwB,IAAI,CAAC,QAAQ,CAAEF,OAC1C,CAAC,CACD,MAAO,CAAAN,MAAM,CAACL,IAAI,CACpB,CAAE,MAAOL,KAAK,CAAE,CACd,MAAO,KAAI,CACb,CACF,CAAC,CAEDmB,YAAY,CAAE,KAAAA,CAAOC,EAAE,CAAEH,UAAU,GAAK,CACtC,GAAI,CACF,KAAM,CAAAP,MAAM,CAAG,KAAM,CAAAhB,KAAK,CAAC2B,GAAG,WAAAC,MAAA,CAAWF,EAAE,EAAI,CAAEA,EAAE,CAAEH,UAAW,CAChE,CAAC,CACD,MAAO,CAAAP,MAAM,CAACL,IAAI,CACpB,CAAE,MAAOL,KAAK,CAAE,CACd,MAAO,KAAI,CACb,CACF,CAAC,CAEDuB,UAAU,CAAE,KAAO,CAAAH,EAAE,EAAK,CACxB,GAAI,CACF,KAAM,CAAA1B,KAAK,CAAC8B,MAAM,WAAAF,MAAA,CAAWF,EAAE,CAAE,CAAC,CAClC,MAAO,KAAI,CACb,CAAE,MAAOpB,KAAK,CAAE,CACd,MAAO,MAAK,CACd,CACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}